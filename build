#!/bin/env bash

# configurable variables
executableFile=compiler
buildDirectory=buildDirectory

# polymorphic functions
compile() {
  if [[ ! -d $buildDirectory ]]; then
    echo "-> create build dir"
    mkdir $buildDirectory
  fi
  echo "-> compiling"
  gcc src/main.c -o "$buildDirectory/$executableFile"
  echo "-> compilation complete"
}

run() {
  echo "-> running"
  $buildDirectory/$executableFile
}

clean() {
  echo "-> cleaning"
  if [[ -d $buildDirectory ]]; then
    rm -r $buildDirectory
  fi
}

#hello() {
#  echo Hello
#}

# Code Below is responsible for generating and cleaning symlink as well as making the function callable ################
########################################################################################################################

# non configurable variables
absoluteFilePath="$(realpath $0)"
absoluteFileName="$(echo $absoluteFilePath | rev | grep -o "[^/]*" | head -1 | rev)"
symlinkFileName="$(echo $0 | rev | grep -o "[^/]*" | head -1 | rev)"
scriptDirectory="$(realpath build | rev | grep -o "/.*" | rev)"
symlinkFilePath="$scriptDirectory$symlinkFileName"
# grep all the function present inside the script
# that strictly follows variable names
functionNames=($(cat $absoluteFileName | grep -o "#* *[a-zA-Z0-9][a-zA-Z0-9]*[(]" | sed 's/(//g' | grep -o "^[a-zA-Z0-9].*"))
# move to script directory
cd $scriptDirectory

if [[ $symlinkFilePath != $absoluteFilePath ]]; then
  if [[ ! "${functionNames[*]}" =~ $symlinkFileName ]]; then
    echo "-> function not found : $symlinkFileName"
    echo "-> cleaning Symlink"
    rm $symlinkFilePath
  else
    $symlinkFileName
  fi
fi

if [[ $symlinkFilePath == $absoluteFilePath ]]; then
  # remove deleted function symlinks
  for file in $(ls); do
    if [[ -f $file ]] && [[ $file != $absoluteFileName ]] && [[ "$(realpath $file | rev | grep -o "[^/]*" | head -1 | rev)" == $absoluteFileName ]] && [[ ! ${functionNames[*]} =~ "$file" ]]; then
      echo "-> rm $file -> $(realpath $file)"
      rm $file
    fi
  done
  # create new symlinks
  for function in ${functionNames[@]}; do
    if [[ ! -f $function ]] && [[ $function != "" ]]; then
      echo "-> creating symlink : \"$function\" -> $absoluteFileName"
      ln -s $absoluteFilePath "$scriptDirectory$function"
      chmod +x "$scriptDirectory$function"
    fi
  done
  echo "-> these function are callable : ${functionNames[@]}"
  exit
fi
